// Code generated by mockery v2.10.4. DO NOT EDIT.

package storagemocks

import (
	context "context"

	diade "github.com/rfdez/diade/internal"
	mock "github.com/stretchr/testify/mock"
)

// CelebrationRepository is an autogenerated mock type for the CelebrationRepository type
type CelebrationRepository struct {
	mock.Mock
}

// SearchByDate provides a mock function with given fields: _a0, _a1
func (_m *CelebrationRepository) SearchByDate(_a0 context.Context, _a1 diade.CelebrationDate) ([]diade.Celebration, error) {
	ret := _m.Called(_a0, _a1)

	var r0 []diade.Celebration
	if rf, ok := ret.Get(0).(func(context.Context, diade.CelebrationDate) []diade.Celebration); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]diade.Celebration)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, diade.CelebrationDate) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
