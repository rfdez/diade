version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: diade-api
    depends_on:
      db:
        condition: service_healthy
    environment:
      DIADE_DBUSER: ${DB_USER}
      DIADE_DBPASS: ${DB_PASS}
      DIADE_DBHOST: ${DB_HOST}
      DIADE_DBPORT: ${DB_PORT}
      DIADE_DBNAME: ${DB_NAME}
      DIADE_DBPARAMS: ${DB_PARAMS}
    image: rfdez/diade-api:latest
    networks:
      - diade-network
    ports:
      - "8080:8080"
    restart: unless-stopped

  db:
    container_name: diade-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      timeout: 5s
      interval: 10s
      retries: 5
    image: postgres:15.2-alpine
    networks:
      - diade-network
    restart: unless-stopped
    volumes:
      - "diade-api-dbdata:/var/lib/postgresql/data"
      - "./sql/:/docker-entrypoint-initdb.d"

networks:
  diade-network:

volumes:
  diade-api-dbdata:
